from typing import List


class Solution:
    # case 01
    def is_valid_sudoku(self, board: List[List[str]]) -> bool:
        s = []

        for i in range(9):
            # 横
            a1 = []
            for x in range(9):
                if board[i][x] != '.':
                    a1.append(board[i][x])

            # if
            # 纵
            # for j in range(9):
            #     if board[i][j] == board[j][i]:
            #         return False

            # 小九宫格
            # for z in range(9):
            #     s.append(board[i][j])
            #     if i % 3 == 0 and j % 3 == 0:
            #         if len(board[i]) != len(set(board[i])):
            #             return False

            return True


solution = Solution()
print(solution.is_valid_sudoku([["5", "3", ".", ".", "7", ".", ".", ".", "."]
                                   , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
                                   , [".", "9", "8", ".", ".", ".", ".", "6", "."]
                                   , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
                                   , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
                                   , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
                                   , [".", "6", ".", ".", ".", ".", "2", "8", "."]
                                   , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
                                   , [".", ".", ".", ".", "8", ".", ".", "7", "9"]]))
# true

print(solution.is_valid_sudoku([["8", "3", ".", ".", "7", ".", ".", ".", "."]
                                   , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
                                   , [".", "9", "8", ".", ".", ".", ".", "6", "."]
                                   , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
                                   , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
                                   , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
                                   , [".", "6", ".", ".", ".", ".", "2", "8", "."]
                                   , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
                                   , [".", ".", ".", ".", "8", ".", ".", "7", "9"]]))
# false
